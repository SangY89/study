package Chapter1;

public class EX06 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 자료형
		// 정수 자료형
		// 소수점이 없는 숫자 = "정수"
		// byte, short, int, long 여러가지 타입이 존재(크기가 서로 다르다.)
		// int 를 기본 타입으로 많이 사용하며, long 의 경우 "L"형태로 표현하여 사용
		// char 라ㅏ는 타입도 존재하며, 각 글자에 번호 값을 붙인 특수한 숫자값
		// (유니코드)을 표현
		// 유니코드는 세계 각국의 묹를 2byte로 표현할 수 있는 숫자(0~65535)로
		// 매핑한 국제 표준 규약으로 
		// 자바는 이러한 유니코드를 저장할 수 있도록 2byte크기인 char 타입을 제공
		// int 에 저장되는 값의 범위(약 -21억 ~ 약 21억)
		// long 에 저장되는 값의 범위(-2^63 ~ 2^63-1)
		
		// 실수/ 논리 자료형
		// 소수점이 있는 숫자 = "실수"
		// float, double 타입이 존재 (크기가 서로 다르다.)
		// double 을 기본 타입으로 많이 사용하며, float 의 경우 "f"형태로 표현하여 사용
		// 판정을 위한 데이터를 논리라 부름
		// True / False 단 두개의 값만 가질 수 있음
		// 숫자처럼 계산이 불가능(주의: 다른 언어에서처럼 0과 1을 JAVA에서는 논리로 사용할 수 없음)
		
		// 문자열 자료형
		// char 데이터가 줄지어 있는 형태로 Java 에서는 String 클래스를 사용함
		// 대부분의 데이터는 전부 문자열 형태로 구성
		// 문자열 데이터는 쌍따옴표("")를 이용하여 데이터를 감싼 뒤 표현
		// 기본 자료형이 아니며, 길이가 자유자재로 변함(이러한 형태를 참조형이라 부름)
		// 기본 데이터 형태는 아니지만 자바에서 특별히 기본 데이터처럼 쓸 수 있도록 지원하는 유형
		// 문자열은 계산식 중 "+"만 사용가능
		
		// 정수 자료형
		System.out.println(10/3);
		System.out.println(10/3.0); // 5로 끝나는 이유 = 부동소수점 오차
		System.out.println(10%3);
		
		System.out.println(1000000000 + 2000000000);
		System.out.println(1000000000L + 2000000000L);
		
		System.out.println('a');    // 유니코드로 인해 더하고 빼는 값이 나온다
		System.out.println('a' + 1);
		System.out.println('a' - 1);
	}

}
